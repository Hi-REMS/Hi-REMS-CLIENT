name: Frontend CI (lint / test / build)

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (frontend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (frontend or root) for lint
        run: |
          set -e
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            cd frontend
            npm ci 2>&1 | tee npm-ci-frontend.log || true
            mv npm-ci-frontend.log "$GITHUB_WORKSPACE/frontend-npm-ci.log" || true
          elif [ -f package.json ]; then
            npm ci 2>&1 | tee npm-ci-root.log || true
            mv npm-ci-root.log "$GITHUB_WORKSPACE/npm-ci-root.log" || true
          else
            echo "No package.json found - skipping npm ci"
          fi
        shell: bash

      - name: Run lint and collect log (non-blocking)
        run: |
          set -e
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            cd frontend
            npm run lint 2>&1 | tee npm-lint-frontend.log || true
            mv npm-lint-frontend.log "$GITHUB_WORKSPACE/frontend-npm-lint.log" || true
          elif [ -f package.json ]; then
            npm run lint 2>&1 | tee npm-lint-root.log || true
            mv npm-lint-root.log "$GITHUB_WORKSPACE/npm-lint-root.log" || true
          else
            echo "no lint script"
          fi
        shell: bash

      - name: Upload lint logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: |
            frontend-npm-lint.log
            npm-lint-root.log
          if-no-files-found: ignore
          retention-days: 7

  test:
    name: Tests (frontend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (frontend or root) for tests
        run: |
          set -e
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            cd frontend
            npm ci 2>&1 | tee npm-ci-frontend.log || true
            mv npm-ci-frontend.log "$GITHUB_WORKSPACE/frontend-npm-ci.log" || true
          elif [ -f package.json ]; then
            npm ci 2>&1 | tee npm-ci-root.log || true
            mv npm-ci-root.log "$GITHUB_WORKSPACE/npm-ci-root.log" || true
          else
            echo "No package.json found - skipping npm ci"
          fi
        shell: bash

      - name: Run tests and collect log (optional)
        run: |
          set -e
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            cd frontend
            npm test --if-present 2>&1 | tee npm-test-frontend.log || true
            mv npm-test-frontend.log "$GITHUB_WORKSPACE/frontend-npm-test.log" || true
          elif [ -f package.json ]; then
            npm test --if-present 2>&1 | tee npm-test-root.log || true
            mv npm-test-root.log "$GITHUB_WORKSPACE/npm-test-root.log" || true
          else
            echo "no tests"
          fi
        shell: bash

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            frontend-npm-test.log
            npm-test-root.log
          if-no-files-found: ignore
          retention-days: 7

  build:
    name: Build (frontend)
    runs-on: ubuntu-latest
    # build은 lint와 test가 끝난 뒤 실행(병렬로 돌리고 싶으면 needs를 제거)
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (frontend or root) for build
        run: |
          set -e
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            cd frontend
            npm ci 2>&1 | tee npm-ci-frontend.log || true
            mv npm-ci-frontend.log "$GITHUB_WORKSPACE/frontend-npm-ci.log" || true
          elif [ -f package.json ]; then
            npm ci 2>&1 | tee npm-ci-root.log || true
            mv npm-ci-root.log "$GITHUB_WORKSPACE/npm-ci-root.log" || true
          else
            echo "No package.json found - skipping npm ci"
          fi
        shell: bash

      - name: Build (root or frontend) - verbose
        run: |
          set -e
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            cd frontend
            npm run build --if-present 2>&1 | tee npm-build-frontend.log || true
            mv npm-build-frontend.log "$GITHUB_WORKSPACE/frontend-npm-build.log" || true
          elif [ -f package.json ]; then
            npm run build --if-present 2>&1 | tee npm-build-root.log || true
            mv npm-build-root.log "$GITHUB_WORKSPACE/npm-build-root.log" || true
          else
            echo "No build script found - skipping build"
          fi
        shell: bash

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            frontend-npm-build.log
            npm-build-root.log
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload dist artifact (frontend/dist if present, otherwise root/dist)
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: |
            frontend/dist
            dist
          if-no-files-found: ignore
          retention-days: 7
